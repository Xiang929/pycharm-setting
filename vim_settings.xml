<application>
  <component name="VimSettings">
    <state version="4" enabled="true" />
    <globalmarks />
    <filemarks>
      <file name="C:/vscodePython/holpy/kernel/theory.py" timestamp="1542963890617">
        <mark key="'" line="363" column="0" />
        <mark key="[" line="398" column="0" />
        <mark key="]" line="398" column="0" />
        <mark key="." line="398" column="0" />
        <mark key="^" line="398" column="0" />
      </file>
      <file name="C:/PythonProject/final_exam/weibo/views.py" timestamp="1544362570964">
        <mark key="'" line="98" column="0" />
        <mark key="[" line="14" column="24" />
        <mark key="]" line="16" column="0" />
        <mark key="." line="16" column="0" />
      </file>
      <file name="/Dummy.txt" timestamp="1543045864773">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="C:/PythonProject/final_exam/templates/home.html" timestamp="1544267205101">
        <mark key="[" line="29" column="24" />
        <mark key="]" line="30" column="55" />
        <mark key="." line="30" column="55" />
        <mark key="^" line="30" column="55" />
      </file>
      <file name="/Python Console" timestamp="1543041780422">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="C:/vscodePython/holpy/server/tactic.py" timestamp="1544143388311">
        <mark key="[" line="220" column="16" />
        <mark key="]" line="220" column="17" />
        <mark key="." line="220" column="17" />
        <mark key="^" line="2" column="4" />
      </file>
      <file name="C:/vscodePython/holpy/app/cell.py" timestamp="1542817951842">
        <mark key="[" line="6" column="0" />
        <mark key="]" line="6" column="59" />
      </file>
      <file name="C:/vscodePython/holpy/examples/problem8.json" timestamp="1544145779566">
        <mark key="[" line="9" column="19" />
        <mark key="]" line="9" column="35" />
      </file>
      <file name="C:/PythonProject/final_exam/weibo/forms.py" timestamp="1544172981743" />
      <file name="C:/vscodePython/holpy/app/templates/index.html" timestamp="1543031431474">
        <mark key="'" line="13" column="38" />
        <mark key="[" line="13" column="26" />
        <mark key="]" line="13" column="25" />
        <mark key="." line="13" column="25" />
        <mark key="^" line="13" column="25" />
      </file>
      <file name="C:/vscodePython/holpy/server/server.py" timestamp="1543041294110">
        <mark key="'" line="21" column="8" />
      </file>
      <file name="C:/PythonProject/final_exam/templates/index.html" timestamp="1544263433304">
        <mark key="[" line="208" column="61" />
      </file>
      <file name="C:/vscodePython/holpy/app/static/css/index.css" timestamp="1542991839787">
        <mark key="[" line="94" column="10" />
        <mark key="]" line="94" column="15" />
        <mark key="." line="94" column="15" />
        <mark key="^" line="94" column="15" />
      </file>
      <file name="C:/vscodePython/holpy/app/static/js/main.js" timestamp="1544142670549">
        <mark key="[" line="260" column="0" />
        <mark key="]" line="260" column="0" />
        <mark key="." line="260" column="0" />
      </file>
      <file name="C:/PythonProject/final_exam/static/css/index.css" timestamp="1544262578904">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="C:/vscodePython/holpy/syntax/parser.py" timestamp="1542817894402">
        <mark key="[" line="127" column="11" />
        <mark key="]" line="127" column="14" />
        <mark key="^" line="127" column="14" />
        <mark key="." line="127" column="14" />
      </file>
      <file name="C:/vscodePython/holpy/server/tests/tactic_test.py" timestamp="1544143597941">
        <mark key="'" line="15" column="0" />
        <mark key="[" line="2" column="0" />
        <mark key="]" line="25" column="24" />
        <mark key="." line="316" column="5" />
      </file>
      <file name="C:/PythonProject/venv_script/final_exam/Lib/site-packages/django/db/backends/sqlite3/base.py" timestamp="1544172037351" />
      <file name="C:/PythonProject/final_exam/weibo/models.py" timestamp="1544361225392">
        <mark key="[" line="51" column="4" />
        <mark key="]" line="59" column="34" />
        <mark key="^" line="59" column="34" />
        <mark key="." line="59" column="34" />
      </file>
      <file name="C:/vscodePython/holpy/app/__init__.py" timestamp="1544143082504">
        <mark key="'" line="67" column="0" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
        <mark key="^" line="0" column="0" />
      </file>
      <file name="C:/PythonProject/ContractManagement/ContractMis/views.py" timestamp="1544360643838" />
    </filemarks>
    <jumps>
      <jump line="165" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="160" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="157" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="150" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="147" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="138" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="136" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="131" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="126" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="118" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="116" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="107" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="98" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="93" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="86" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="78" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="76" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="68" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="63" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="36" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="61" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="55" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="47" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="42" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="30" column="8" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="15" column="3" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="56" column="4" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="29" column="4" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="0" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="149" column="4" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="178" column="4" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="78" column="11" filename="C:/vscodePython/holpy/app/__init__.py" />
      <jump line="73" column="0" filename="C:/vscodePython/holpy/app/__init__.py" />
      <jump line="84" column="0" filename="C:/vscodePython/holpy/app/__init__.py" />
      <jump line="72" column="0" filename="C:/vscodePython/holpy/app/__init__.py" />
      <jump line="81" column="16" filename="C:/vscodePython/holpy/app/__init__.py" />
      <jump line="71" column="0" filename="C:/vscodePython/holpy/app/__init__.py" />
      <jump line="86" column="0" filename="C:/vscodePython/holpy/app/__init__.py" />
      <jump line="94" column="4" filename="C:/vscodePython/holpy/app/__init__.py" />
      <jump line="251" column="25" filename="C:/vscodePython/holpy/kernel/theory.py" />
      <jump line="74" column="8" filename="C:/vscodePython/holpy/kernel/theory.py" />
      <jump line="2" column="0" filename="C:/vscodePython/holpy/kernel/theory.py" />
      <jump line="195" column="22" filename="C:/vscodePython/holpy/kernel/theory.py" />
      <jump line="211" column="8" filename="C:/vscodePython/holpy/kernel/theory.py" />
      <jump line="210" column="8" filename="C:/vscodePython/holpy/kernel/theory.py" />
      <jump line="227" column="0" filename="C:/vscodePython/holpy/kernel/theory.py" />
      <jump line="209" column="0" filename="C:/vscodePython/holpy/kernel/theory.py" />
      <jump line="204" column="0" filename="C:/vscodePython/holpy/kernel/theory.py" />
      <jump line="192" column="0" filename="C:/vscodePython/holpy/kernel/theory.py" />
      <jump line="187" column="0" filename="C:/vscodePython/holpy/kernel/theory.py" />
      <jump line="215" column="27" filename="C:/vscodePython/holpy/kernel/theory.py" />
      <jump line="123" column="8" filename="C:/vscodePython/holpy/kernel/theory.py" />
      <jump line="216" column="28" filename="C:/vscodePython/holpy/kernel/theory.py" />
      <jump line="402" column="0" filename="C:/vscodePython/holpy/kernel/theory.py" />
      <jump line="386" column="0" filename="C:/vscodePython/holpy/kernel/theory.py" />
      <jump line="382" column="0" filename="C:/vscodePython/holpy/kernel/theory.py" />
      <jump line="370" column="0" filename="C:/vscodePython/holpy/kernel/theory.py" />
      <jump line="366" column="0" filename="C:/vscodePython/holpy/kernel/theory.py" />
      <jump line="359" column="0" filename="C:/vscodePython/holpy/kernel/theory.py" />
      <jump line="0" column="0" filename="C:/vscodePython/holpy/kernel/theory.py" />
      <jump line="403" column="24" filename="C:/vscodePython/holpy/kernel/theory.py" />
      <jump line="398" column="0" filename="C:/vscodePython/holpy/kernel/theory.py" />
      <jump line="399" column="16" filename="C:/vscodePython/holpy/kernel/theory.py" />
      <jump line="363" column="0" filename="C:/vscodePython/holpy/kernel/theory.py" />
      <jump line="13" column="38" filename="C:/vscodePython/holpy/app/templates/index.html" />
      <jump line="2" column="0" filename="C:/vscodePython/holpy/app/templates/index.html" />
      <jump line="288" column="37" filename="C:/vscodePython/holpy/app/static/js/main.js" />
      <jump line="289" column="11" filename="C:/vscodePython/holpy/app/static/js/main.js" />
      <jump line="307" column="13" filename="C:/vscodePython/holpy/app/static/js/main.js" />
      <jump line="228" column="28" filename="C:/vscodePython/holpy/app/static/js/main.js" />
      <jump line="243" column="1" filename="C:/vscodePython/holpy/app/static/js/main.js" />
      <jump line="237" column="16" filename="C:/vscodePython/holpy/app/static/js/main.js" />
      <jump line="225" column="32" filename="C:/vscodePython/holpy/app/static/js/main.js" />
      <jump line="213" column="28" filename="C:/vscodePython/holpy/app/static/js/main.js" />
      <jump line="231" column="32" filename="C:/vscodePython/holpy/app/static/js/main.js" />
      <jump line="127" column="12" filename="C:/vscodePython/holpy/app/__init__.py" />
      <jump line="250" column="21" filename="C:/vscodePython/holpy/app/static/js/main.js" />
      <jump line="21" column="8" filename="C:/vscodePython/holpy/server/server.py" />
      <jump line="70" column="39" filename="C:/vscodePython/holpy/app/__init__.py" />
      <jump line="76" column="0" filename="C:/vscodePython/holpy/app/__init__.py" />
      <jump line="421" column="16" filename="C:/vscodePython/holpy/app/static/js/main.js" />
      <jump line="420" column="16" filename="C:/vscodePython/holpy/app/static/js/main.js" />
      <jump line="419" column="30" filename="C:/vscodePython/holpy/app/static/js/main.js" />
      <jump line="418" column="16" filename="C:/vscodePython/holpy/app/static/js/main.js" />
      <jump line="412" column="8" filename="C:/vscodePython/holpy/app/static/js/main.js" />
      <jump line="340" column="16" filename="C:/vscodePython/holpy/app/static/js/main.js" />
      <jump line="424" column="16" filename="C:/vscodePython/holpy/app/static/js/main.js" />
      <jump line="46" column="71" filename="C:/vscodePython/holpy/app/static/js/main.js" />
      <jump line="137" column="4" filename="C:/vscodePython/holpy/app/__init__.py" />
      <jump line="138" column="4" filename="C:/vscodePython/holpy/app/__init__.py" />
      <jump line="67" column="0" filename="C:/vscodePython/holpy/app/__init__.py" />
      <jump line="14" column="0" filename="C:/vscodePython/holpy/server/tests/tactic_test.py" />
      <jump line="2" column="14" filename="C:/vscodePython/holpy/server/tests/tactic_test.py" />
      <jump line="15" column="0" filename="C:/vscodePython/holpy/server/tests/tactic_test.py" />
      <jump line="4" column="16" filename="C:/PythonProject/final_exam/templates/index.html" />
      <jump line="0" column="0" filename="C:/PythonProject/final_exam/templates/index.html" />
      <jump line="75" column="12" filename="C:/PythonProject/final_exam/static/css/index.css" />
      <jump line="9" column="0" filename="C:/PythonProject/final_exam/static/css/index.css" />
      <jump line="0" column="0" filename="C:/PythonProject/final_exam/static/css/index.css" />
      <jump line="98" column="0" filename="C:/PythonProject/final_exam/weibo/views.py" />
    </jumps>
    <registers>
      <register name="&quot;" type="2">
        <text encoding="base64">ICAgIHJlc3VsdF9zdHJpbmcgPSBzZXJ2ZXIuY2hlY2tfcHJvb2YoaW5wdXQpCg==</text>
      </register>
      <register name="*" type="4">
        <text encoding="base64">KEEgJiBCKSB8IChBICYgQyk=</text>
      </register>
      <register name="-" type="4">
        <text>pass</text>
      </register>
      <register name="/" type="4">
        <text encoding="base64">XDxhc3NlcnRFcXVhbFw+</text>
      </register>
      <register name="0" type="2">
        <text encoding="base64">ICAgIDxsaW5rIGhyZWY9Ii4uL3N0YXRpYy9jc3MvaW5kZXguY3NzIiByZWw9InN0eWxlc2hlZXQiPgo=</text>
      </register>
      <register name="1" type="2">
        <text encoding="base64">ICAgICAgICBkZHJldHVybiByZWRpcmVjdCgnL3Byb2ZpbGUnKQo=</text>
      </register>
      <register name="2" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="3" type="2">
        <text encoding="base64">ZGQK</text>
      </register>
      <register name="4" type="4">
        <text>def index_view(request):
    if request.user.is_authenticated:
        pass
    else:
        return redirect('/')</text>
      </register>
      <register name="5" type="2">
        <text encoding="base64">CQkJCQkJPGxpPjxhIGhyZWY9IiMiIGNsYXNzPSJidXR0b24iPnNpZ24gSW48L2E+PC9saT4K</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="7" type="2">
        <text encoding="base64">fQo=</text>
      </register>
      <register name="8" type="2">
        <text encoding="base64">ICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgLjIpCg==</text>
      </register>
      <register name="9" type="2">
        <text encoding="base64">OjotbW96LXNlbGVjdGlvbiB7Cg==</text>
      </register>
      <register name=":" type="4">
        <text>action ShowUsages</text>
      </register>
    </registers>
    <search>
      <last-search encoding="base64">XDxhc3NlcnRFcXVhbFw+</last-search>
      <last-offset />
      <last-pattern encoding="base64">XDxhc3NlcnRFcXVhbFw+</last-pattern>
      <last-dir>-1</last-dir>
      <show-last>false</show-last>
    </search>
    <history>
      <history-search>
        <entry encoding="base64">XDxhcHBseV9iYWNrd2FyZF9zdGVwXD4=</entry>
        <entry>assertEqual</entry>
        <entry encoding="base64">XDxhc3NlcnRFcXVhbFw+</entry>
      </history-search>
      <history-cmd>
        <entry>g*/g#</entry>
        <entry>action FindUsages</entry>
        <entry>action GotoFile</entry>
        <entry>action CommentByLineComment</entry>
        <entry>action GotoAction</entry>
        <entry>action ShowFilePath</entry>
        <entry>action CloseActiveTab</entry>
        <entry>action ActivateTerminalToolWindow</entry>
        <entry>action SearchEverywhere</entry>
        <entry>CloseEditor</entry>
        <entry>pwd</entry>
        <entry>ls</entry>
        <entry>tabs</entry>
        <entry>tabfirst</entry>
        <entry>register</entry>
        <entry>Buffers</entry>
        <entry>action CloseEditor</entry>
        <entry>action GotoDeclaration</entry>
        <entry>action Find</entry>
        <entry>action ShowUsages</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
    <shortcut-conflicts>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed G</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed I</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed B</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed W</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed C</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed OPEN_BRACKET</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed H</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed X</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed P</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed E</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed U</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed L</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed J</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed K</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed O</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed S</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed CLOSE_BRACKET</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
</application>