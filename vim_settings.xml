<application>
  <component name="VimSettings">
    <state version="4" enabled="true" />
    <globalmarks />
    <filemarks>
      <file name="C:/vscodePython/holpy/kernel/theory.py" timestamp="1542953511873">
        <mark key="'" line="215" column="16" />
        <mark key="[" line="54" column="0" />
        <mark key="]" line="54" column="0" />
        <mark key="." line="54" column="0" />
      </file>
      <file name="C:/vscodePython/holpy/server/tactic.py" timestamp="1542787231601">
        <mark key="'" line="179" column="4" />
        <mark key="[" line="149" column="20" />
        <mark key="l" line="37" column="0" />
        <mark key="]" line="149" column="21" />
        <mark key="." line="149" column="21" />
        <mark key="^" line="149" column="21" />
      </file>
      <file name="C:/vscodePython/holpy/app/cell.py" timestamp="1542817951842">
        <mark key="[" line="6" column="0" />
        <mark key="]" line="6" column="59" />
      </file>
      <file name="C:/vscodePython/holpy/syntax/parser.py" timestamp="1542817894402">
        <mark key="[" line="127" column="11" />
        <mark key="]" line="127" column="14" />
        <mark key="^" line="127" column="14" />
        <mark key="." line="127" column="14" />
      </file>
      <file name="C:/vscodePython/holpy/server/tests/tactic_test.py" timestamp="1542734625355">
        <mark key="'" line="54" column="13" />
        <mark key="[" line="48" column="25" />
        <mark key="]" line="48" column="24" />
        <mark key="^" line="48" column="24" />
        <mark key="." line="48" column="24" />
      </file>
      <file name="C:/vscodePython/holpy/app/__init__.py" timestamp="1542817433776">
        <mark key="'" line="93" column="4" />
        <mark key="[" line="45" column="14" />
        <mark key="]" line="45" column="13" />
        <mark key="." line="45" column="13" />
        <mark key="^" line="45" column="13" />
      </file>
    </filemarks>
    <jumps>
      <jump line="45" column="40" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="23" column="4" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="26" column="6" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="8" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="79" column="4" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="107" column="45" filename="C:/vscodePython/holpy/server/tests/tactic_test.py" />
      <jump line="1" column="0" filename="C:/vscodePython/holpy/server/tests/tactic_test.py" />
      <jump line="0" column="0" filename="C:/vscodePython/holpy/server/tests/tactic_test.py" />
      <jump line="74" column="21" filename="C:/vscodePython/holpy/server/tests/tactic_test.py" />
      <jump line="65" column="21" filename="C:/vscodePython/holpy/server/tests/tactic_test.py" />
      <jump line="48" column="13" filename="C:/vscodePython/holpy/server/tests/tactic_test.py" />
      <jump line="60" column="13" filename="C:/vscodePython/holpy/server/tests/tactic_test.py" />
      <jump line="54" column="13" filename="C:/vscodePython/holpy/server/tests/tactic_test.py" />
      <jump line="121" column="25" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="177" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="165" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="160" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="157" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="150" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="147" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="138" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="136" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="131" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="126" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="118" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="116" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="107" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="98" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="93" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="86" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="78" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="76" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="68" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="63" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="36" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="61" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="55" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="47" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="42" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="30" column="8" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="15" column="3" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="56" column="4" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="29" column="4" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="0" column="0" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="149" column="4" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="178" column="4" filename="C:/vscodePython/holpy/server/tactic.py" />
      <jump line="78" column="11" filename="C:/vscodePython/holpy/app/__init__.py" />
      <jump line="73" column="0" filename="C:/vscodePython/holpy/app/__init__.py" />
      <jump line="84" column="0" filename="C:/vscodePython/holpy/app/__init__.py" />
      <jump line="72" column="0" filename="C:/vscodePython/holpy/app/__init__.py" />
      <jump line="81" column="16" filename="C:/vscodePython/holpy/app/__init__.py" />
      <jump line="71" column="0" filename="C:/vscodePython/holpy/app/__init__.py" />
      <jump line="86" column="0" filename="C:/vscodePython/holpy/app/__init__.py" />
      <jump line="94" column="4" filename="C:/vscodePython/holpy/app/__init__.py" />
      <jump line="251" column="25" filename="C:/vscodePython/holpy/kernel/theory.py" />
      <jump line="403" column="8" filename="C:/vscodePython/holpy/kernel/theory.py" />
      <jump line="74" column="8" filename="C:/vscodePython/holpy/kernel/theory.py" />
      <jump line="0" column="0" filename="C:/vscodePython/holpy/kernel/theory.py" />
      <jump line="2" column="0" filename="C:/vscodePython/holpy/kernel/theory.py" />
      <jump line="195" column="22" filename="C:/vscodePython/holpy/kernel/theory.py" />
      <jump line="215" column="16" filename="C:/vscodePython/holpy/kernel/theory.py" />
    </jumps>
    <registers>
      <register name="&quot;" type="2">
        <text encoding="base64">ICAgIHJlc3VsdF9zdHJpbmcgPSBzZXJ2ZXIuY2hlY2tfcHJvb2YoaW5wdXQpCg==</text>
      </register>
      <register name="-" type="4">
        <text>urn Term.mk_equals(lhs</text>
      </register>
      <register name="/" type="4">
        <text encoding="base64">XDxhc3NlcnRFcXVhbFw+</text>
      </register>
      <register name="0" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="1" type="2">
        <text encoding="base64">ICAgICAgICAK</text>
      </register>
      <register name="2" type="2">
        <text encoding="base64">ICAgICAgICAiIiJBZGQgYSBuZXcgZGF0YSB0eXBlLgo=</text>
      </register>
      <register name="3" type="2">
        <text encoding="base64">ICAgIHJlc3VsdF9zdHJpbmcgPSBzZXJ2ZXIuY2hlY2tfcHJvb2YoaW5wdXQpCg==</text>
      </register>
      <register name="4" type="2">
        <text encoding="base64">ICAgICAgICAgICAgKGlkLCBydWxlX25hbWUsIGFyZ3MsIHByZXZzKQo=</text>
      </register>
      <register name="5" type="2">
        <text encoding="base64">ICAgICAgICAK</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64">ZGVmIHNldF9saW5lKHByZiwgaWQsIHJ1bGUsICosIGFyZ3MgPSBOb25lLCBwcmV2cyA9IE5vbmUsIHRoID0gTm9uZSk6CiAgICAiIiJTZXQgdGhlIGl0ZW0gd2l0aCB0aGUgZ2l2ZW4gaWQgdG8gdGhlIGZvbGxvd2luZyBkYXRhLiIiIgogICAgbmV3X3ByZiA9IFByb29mKCkKICAgIGZvciBpdGVtIGluIHByZi5wcm9vZjoKICAgICAgICBpZiBpdGVtLmlkID09IGlkOgogICAgICAgICAgICBuZXdfcHJmLnByb29mLmFwcGVuZChQcm9vZkl0ZW0oaWQsIHJ1bGUsIGFyZ3MgPSBhcmdzLCBwcmV2cyA9IHByZXZzLCB0aCA9IHRoKSkKICAgICAgICBlbHNlOgogICAgICAgICAgICBuZXdfcHJmLnByb29mLmFwcGVuZChpdGVtKQo=</text>
      </register>
      <register name="7" type="2">
        <text encoding="base64">ZGVmIHNldF9saW5lKHByZiwgaWQsIHJ1bGUsICosIGFyZ3MgPSBOb25lLCBwcmV2cyA9IE5vbmUsIHRoID0gTm9uZSk6CiAgICAiIiJTZXQgdGhlIGl0ZW0gd2l0aCB0aGUgZ2l2ZW4gaWQgdG8gdGhlIGZvbGxvd2luZyBkYXRhLiIiIgogICAgbmV3X3ByZiA9IFByb29mKCkKICAgIGZvciBpdGVtIGluIHByZi5wcm9vZjoKICAgICAgICBpZiBpdGVtLmlkID09IGlkOgogICAgICAgICAgICBuZXdfcHJmLnByb29mLmFwcGVuZChQcm9vZkl0ZW0oaWQsIHJ1bGUsIGFyZ3MgPSBhcmdzLCBwcmV2cyA9IHByZXZzLCB0aCA9IHRoKSkKICAgICAgICBlbHNlOgogICAgICAgICAgICBuZXdfcHJmLnByb29mLmFwcGVuZChpdGVtKQo=</text>
      </register>
      <register name="8" type="2">
        <text encoding="base64">ZGVmIHNldF9saW5lKHByZiwgaWQsIHJ1bGUsICosIGFyZ3MgPSBOb25lLCBwcmV2cyA9IE5vbmUsIHRoID0gTm9uZSk6CiAgICAiIiJTZXQgdGhlIGl0ZW0gd2l0aCB0aGUgZ2l2ZW4gaWQgdG8gdGhlIGZvbGxvd2luZyBkYXRhLiIiIgogICAgbmV3X3ByZiA9IFByb29mKCkKICAgIGZvciBpdGVtIGluIHByZi5wcm9vZjoKICAgICAgICBpZiBpdGVtLmlkID09IGlkOgogICAgICAgICAgICBuZXdfcHJmLnByb29mLmFwcGVuZChQcm9vZkl0ZW0oaWQsIHJ1bGUsIGFyZ3MgPSBhcmdzLCBwcmV2cyA9IHByZXZzLCB0aCA9IHRoKSkKICAgICAgICBlbHNlOgogICAgICAgICAgICBuZXdfcHJmLnByb29mLmFwcGVuZChpdGVtKQo=</text>
      </register>
      <register name="9" type="2">
        <text encoding="base64">IyBBdXRob3I6IEJvaHVhIFpoYW4KCmltcG9ydCB1bml0dGVzdAoKZnJvbSBrZXJuZWwudHlwZSBpbXBvcnQgaG9sX2Jvb2wKZnJvbSBrZXJuZWwudGVybSBpbXBvcnQgVGVybSwgVmFyCmZyb20ga2VybmVsLnRobSBpbXBvcnQgVGhtCmZyb20ga2VybmVsLnByb29mIGltcG9ydCBQcm9vZgpmcm9tIGtlcm5lbC5yZXBvcnQgaW1wb3J0IFByb29mUmVwb3J0CmZyb20gbG9naWMubG9naWMgaW1wb3J0IExvZ2ljCmZyb20gbG9naWMuYmFzaWMgaW1wb3J0IEJhc2ljVGhlb3J5CmltcG9ydCBzZXJ2ZXIudGFjdGljIGFzIHRhY3RpYwoKdGh5ID0gQmFzaWNUaGVvcnkoKQoKQSA9IFZhcigiQSIsIGhvbF9ib29sKQpCID0gVmFyKCJCIiwgaG9sX2Jvb2wpCmNvbmogPSBMb2dpYy5ta19jb25qCmRpc2ogPSBMb2dpYy5ta19kaXNqCgpjbGFzcyBUYWN0aWNUZXN0KHVuaXR0ZXN0LlRlc3RDYXNlKToKICAgIGRlZiB0ZXN0SW5pdFByb29mKHNlbGYpOgogICAgICAgIHByZiA9IHRhY3RpYy5pbml0X3Byb29mKFtBLCBCXSwgW2NvbmooQSwgQildLCBjb25qKEIsIEEpKQogICAgICAgIHNlbGYuYXNzZXJ0RXF1YWwocHJmLmdldF9udW1faXRlbSgpLCAzKQogICAgICAgIHNlbGYuYXNzZXJ0RXF1YWwodGh5LmNoZWNrX3Byb29mKHByZiksIFRobS5ta19pbXBsaWVzKGNvbmooQSwgQiksIGNvbmooQiwgQSkpKQoKICAgIGRlZiB0ZXN0QWRkTGluZUFmdGVyKHNlbGYpOgogICAgICAgIHByZiA9IHRhY3RpYy5pbml0X3Byb29mKFtBLCBCXSwgW2NvbmooQSwgQildLCBjb25qKEIsIEEpKQogICAgICAgIAogICAgICAgIHByZjIgPSB0YWN0aWMuYWRkX2xpbmVfYWZ0ZXIocHJmLCAiQTEiKQogICAgICAgIHNlbGYuYXNzZXJ0RXF1YWwocHJmMi5nZXRfbnVtX2l0ZW0oKSwgNCkKICAgICAgICBzZWxmLmFzc2VydEVxdWFsKHRoeS5jaGVja19wcm9vZihwcmYyKSwgVGhtLm1rX2ltcGxpZXMoY29uaihBLCBCKSwgY29uaihCLCBBKSkpCiAgICAgICAgc2VsZi5hc3NlcnRFcXVhbChwcmYyLnByb29mWzFdLnJ1bGUsICIiKQoKICAgICAgICBwcmYzID0gdGFjdGljLmFkZF9saW5lX2FmdGVyKHByZiwgIlMxIikKICAgICAgICBzZWxmLmFzc2VydEVxdWFsKHByZjMuZ2V0X251bV9pdGVtKCksIDQpCiAgICAgICAgc2VsZi5hc3NlcnRFcXVhbCh0aHkuY2hlY2tfcHJvb2YocHJmMyksIFRobS5ta19pbXBsaWVzKGNvbmooQSwgQiksIGNvbmooQiwgQSkpKQogICAgICAgIHNlbGYuYXNzZXJ0RXF1YWwocHJmMy5wcm9vZlsyXS5ydWxlLCAiIikKCiAgICBkZWYgdGVzdEFkZExpbmVCZWZvcmUoc2VsZik6CiAgICAgICAgcHJmID0gdGFjdGljLmluaXRfcHJvb2YoW0EsIEJdLCBbY29uaihBLCBCKV0sIGNvbmooQiwgQSkpCgogICAgICAgIHByZjIgPSB0YWN0aWMuYWRkX2xpbmVfYmVmb3JlKHByZiwgIlMxIiwgMSkKICAgICAgICBzZWxmLmFzc2VydEVxdWFsKHByZjIuZ2V0X251bV9pdGVtKCksIDQpCiAgICAgICAgc2VsZi5hc3NlcnRFcXVhbCh0aHkuY2hlY2tfcHJvb2YocHJmMiksIFRobS5ta19pbXBsaWVzKGNvbmooQSwgQiksIGNvbmooQiwgQSkpKQoKICAgICAgICBwcmYzID0gdGFjdGljLmFkZF9saW5lX2JlZm9yZShwcmYsICJTMSIsIDMpCiAgICAgICAgc2VsZi5hc3NlcnRFcXVhbChwcmYzLmdldF9udW1faXRlbSgpLCA2KQogICAgICAgIHNlbGYuYXNzZXJ0RXF1YWwodGh5LmNoZWNrX3Byb29mKHByZjMpLCBUaG0ubWtfaW1wbGllcyhjb25qKEEsIEIpLCBjb25qKEIsIEEpKSkKCiAgICBkZWYgdGVzdFJlbW92ZUxpbmUoc2VsZik6CiAgICAgICAgcHJmID0gdGFjdGljLmluaXRfcHJvb2YoW0EsIEJdLCBbY29uaihBLCBCKV0sIGNvbmooQiwgQSkpCiAgICAgICAgcHJmMiA9IHRhY3RpYy5hZGRfbGluZV9hZnRlcihwcmYsICJBMSIpCiAgICAgICAgcHJmMyA9IHRhY3RpYy5yZW1vdmVfbGluZShwcmYyLCAiUzEiKQogICAgICAgIHNlbGYuYXNzZXJ0RXF1YWwocHJmLCBwcmYzKQoKICAgIGRlZiB0ZXN0U2V0TGluZShzZWxmKToKICAgICAgICBwcmYgPSB0YWN0aWMuaW5pdF9wcm9vZihbQSwgQl0sIFtjb25qKEEsIEIpXSwgY29uaihCLCBBKSkKICAgICAgICBwcmYgPSB0YWN0aWMuYWRkX2xpbmVfYWZ0ZXIocHJmLCAiQTEiKQogICAgICAgIHByZiA9IHRhY3RpYy5zZXRfbGluZShwcmYsICJTMSIsICJ0aGVvcmVtIiwgYXJncyA9ICJjb25qRDEiKQogICAgICAgIHNlbGYuYXNzZXJ0RXF1YWwocHJmLmdldF9udW1faXRlbSgpLCA0KQogICAgICAgIHNlbGYuYXNzZXJ0RXF1YWwodGh5LmNoZWNrX3Byb29mKHByZiksIFRobS5ta19pbXBsaWVzKGNvbmooQSwgQiksIGNvbmooQiwgQSkpKQoKICAgIGRlZiB0ZXN0QXBwbHlCYWNrd2FyZFN0ZXAoc2VsZik6CiAgICAgICAgcHJmID0gdGFjdGljLmluaXRfcHJvb2YoW0EsIEJdLCBbY29uaihBLCBCKV0sIGNvbmooQiwgQSkpCiAgICAgICAgcHJmID0gdGFjdGljLmFwcGx5X2JhY2t3YXJkX3N0ZXAocHJmLCAiUzEiLCB0aHksICJjb25qSSIpCiAgICAgICAgcnB0ID0gUHJvb2ZSZXBvcnQoKQogICAgICAgIHNlbGYuYXNzZXJ0RXF1YWwodGh5LmNoZWNrX3Byb29mKHByZiwgcnB0KSwgVGhtLm1rX2ltcGxpZXMoY29uaihBLCBCKSwgY29uaihCLCBBKSkpCiAgICAgICAgc2VsZi5hc3NlcnRFcXVhbChsZW4ocnB0LmdhcHMpLCAyKQoKICAgIGRlZiB0ZXN0QXBwbHlCYWNrd2FyZFN0ZXAyKHNlbGYpOgogICAgICAgICIiIkNhc2Ugd2hlcmUgb25lIG9yIG1vcmUgYXNzdW1wdGlvbiBhbHNvIG5lZWRzIHRvIGJlIG1hdGNoZWQuIiIiCiAgICAgICAgcHJmID0gdGFjdGljLmluaXRfcHJvb2YoW0EsIEJdLCBbZGlzaihBLCBCKV0sIGRpc2ooQiwgQSkpCiAgICAgICAgdGh5LmNoZWNrX3Byb29mKHByZikKICAgICAgICBwcmYgPSB0YWN0aWMuYXBwbHlfYmFja3dhcmRfc3RlcChwcmYsICJTMSIsIHRoeSwgImRpc2pFIiwgcHJldnMgPSBbIkExIl0pCiAgICAgICAgcnB0ID0gUHJvb2ZSZXBvcnQoKQogICAgICAgIHNlbGYuYXNzZXJ0RXF1YWwodGh5LmNoZWNrX3Byb29mKHByZiwgcnB0KSwgVGhtLm1rX2ltcGxpZXMoZGlzaihBLCBCKSwgZGlzaihCLCBBKSkpCiAgICAgICAgc2VsZi5hc3NlcnRFcXVhbChsZW4ocnB0LmdhcHMpLCAyKQoKICAgIGRlZiB0ZXN0SW50cm9kdWN0aW9uKHNlbGYpOgogICAgICAgIHByZiA9IHRhY3RpYy5pbml0X3Byb29mKFtBLCBCXSwgW10sIFRlcm0ubWtfaW1wbGllcyhkaXNqKEEsIEIpLCBkaXNqKEIsIEEpKSkKICAgICAgICBwcmYgPSB0YWN0aWMuaW50cm9kdWN0aW9uKHByZiwgIlMxIikKICAgICAgICBzZWxmLmFzc2VydEVxdWFsKHRoeS5jaGVja19wcm9vZihwcmYpLCBUaG0ubWtfaW1wbGllcyhkaXNqKEEsIEIpLCBkaXNqKEIsIEEpKSkKCiAgICBkZWYgdGVzdEludHJvZHVjdGlvbjIoc2VsZik6CiAgICAgICAgcHJmID0gdGFjdGljLmluaXRfcHJvb2YoW0EsIEJdLCBbXSwgVGVybS5ta19pbXBsaWVzKEEsIEIsIGNvbmooQSwgQikpKQogICAgICAgIHByZiA9IHRhY3RpYy5pbnRyb2R1Y3Rpb24ocHJmLCAiUzEiKQogICAgICAgIHNlbGYuYXNzZXJ0RXF1YWwodGh5LmNoZWNrX3Byb29mKHByZiksIFRobS5ta19pbXBsaWVzKEEsIEIsIGNvbmooQSwgQikpKQoKICAgIGRlZiB0ZXN0Q29uakNvbW0oc2VsZik6CiAgICAgICAgIiIiUHJvb2Ygb2YgQSAmIEIgLS0+IEIgJiBBLiIiIgogICAgICAgIHByZiA9IHRhY3RpYy5pbml0X3Byb29mKFtBLCBCXSwgW2NvbmooQSwgQildLCBjb25qKEIsIEEpKQogICAgICAgIHByZiA9IHRhY3RpYy5hcHBseV9iYWNrd2FyZF9zdGVwKHByZiwgIlMxIiwgdGh5LCAiY29uakkiKQogICAgICAgIHByZiA9IHRhY3RpYy5zZXRfbGluZShwcmYsICJTMSIsICJhcHBseV90aGVvcmVtIiwgYXJncyA9ICJjb25qRDIiLCBwcmV2cyA9IFsiQTEiXSkKICAgICAgICBwcmYgPSB0YWN0aWMuc2V0X2xpbmUocHJmLCAiUzIiLCAiYXBwbHlfdGhlb3JlbSIsIGFyZ3MgPSAiY29uakQxIiwgcHJldnMgPSBbIkExIl0pCiAgICAgICAgcnB0ID0gUHJvb2ZSZXBvcnQoKQogICAgICAgIHNlbGYuYXNzZXJ0RXF1YWwodGh5LmNoZWNrX3Byb29mKHByZiwgcnB0KSwgVGhtLm1rX2ltcGxpZXMoY29uaihBLCBCKSwgY29uaihCLCBBKSkpCiAgICAgICAgc2VsZi5hc3NlcnRFcXVhbChsZW4ocnB0LmdhcHMpLCAwKQoKICAgIGRlZiB0ZXN0RGlzakNvbW0oc2VsZik6CiAgICAgICAgIiIiUHJvb2Ygb2YgQSB8IEIgLS0+IEIgfCBBLiIiIgogICAgICAgIHByZiA9IHRhY3RpYy5pbml0X3Byb29mKFtBLCBCXSwgW2Rpc2ooQSwgQildLCBkaXNqKEIsIEEpKQogICAgICAgIHRoeS5jaGVja19wcm9vZihwcmYpCiAgICAgICAgcHJmID0gdGFjdGljLmFwcGx5X2JhY2t3YXJkX3N0ZXAocHJmLCAiUzEiLCB0aHksICJkaXNqRSIsIHByZXZzID0gWyJBMSJdKQogICAgICAgIHByZiA9IHRhY3RpYy5pbnRyb2R1Y3Rpb24ocHJmLCAiUzEiKQogICAgICAgIHByZiA9IHRhY3RpYy5hZGRfbGluZV9hZnRlcihwcmYsICJTMSIpCiAgICAgICAgcHJmID0gdGFjdGljLnNldF9saW5lKHByZiwgIlMyIiwgInRoZW9yZW0iLCBhcmdzID0gImRpc2pJMiIpCiAgICAgICAgcHJmID0gdGFjdGljLmFkZF9saW5lX2FmdGVyKHByZiwgIlMyIikKICAgICAgICBwcmYgPSB0YWN0aWMuc2V0X2xpbmUocHJmLCAiUzMiLCAic3Vic3RpdHV0aW9uIiwgYXJncyA9IHsiQSI6IEIsICJCIjogQX0sIHByZXZzID0gWyJTMiJdKQogICAgICAgIHByZiA9IHRhY3RpYy5zZXRfbGluZShwcmYsICJTNCIsICJpbXBsaWVzX2VsaW0iLCBwcmV2cyA9IFsiUzMiLCAiUzEiXSkKICAgICAgICBwcmYgPSB0YWN0aWMuaW50cm9kdWN0aW9uKHByZiwgIlM2IikKICAgICAgICBwcmYgPSB0YWN0aWMuYWRkX2xpbmVfYWZ0ZXIocHJmLCAiUzYiKQogICAgICAgIHByZiA9IHRhY3RpYy5zZXRfbGluZShwcmYsICJTNyIsICJ0aGVvcmVtIiwgYXJncyA9ICJkaXNqSTEiKQogICAgICAgIHByZiA9IHRhY3RpYy5hZGRfbGluZV9hZnRlcihwcmYsICJTNyIpCiAgICAgICAgcHJmID0gdGFjdGljLnNldF9saW5lKHByZiwgIlM4IiwgInN1YnN0aXR1dGlvbiIsIGFyZ3MgPSB7IkEiOiBCLCAiQiI6IEF9LCBwcmV2cyA9IFsiUzciXSkKICAgICAgICBwcmYgPSB0YWN0aWMuc2V0X2xpbmUocHJmLCAiUzkiLCAiaW1wbGllc19lbGltIiwgcHJldnMgPSBbIlM4IiwgIlM2Il0pCiAgICAgICAgcnB0ID0gUHJvb2ZSZXBvcnQoKQogICAgICAgIHNlbGYuYXNzZXJ0RXF1YWwodGh5LmNoZWNrX3Byb29mKHByZiwgcnB0KSwgVGhtLm1rX2ltcGxpZXMoZGlzaihBLCBCKSwgZGlzaihCLCBBKSkpCiAgICAgICAgc2VsZi5hc3NlcnRFcXVhbChsZW4ocnB0LmdhcHMpLCAwKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIHVuaXR0ZXN0Lm1haW4oKQo=</text>
      </register>
      <register name=":" type="4">
        <text>action CloseEditor</text>
      </register>
    </registers>
    <search>
      <last-search encoding="base64">XDxhc3NlcnRFcXVhbFw+</last-search>
      <last-offset />
      <last-pattern encoding="base64">XDxhc3NlcnRFcXVhbFw+</last-pattern>
      <last-dir>-1</last-dir>
      <show-last>false</show-last>
    </search>
    <history>
      <history-search>
        <entry encoding="base64">XDxhcHBseV9iYWNrd2FyZF9zdGVwXD4=</entry>
        <entry>assertEqual</entry>
        <entry encoding="base64">XDxhc3NlcnRFcXVhbFw+</entry>
      </history-search>
      <history-cmd>
        <entry>@</entry>
        <entry>%d</entry>
        <entry>earlier 15m</entry>
        <entry>:earlier 15m</entry>
        <entry>earlier r15</entry>
        <entry>q</entry>
        <entry>g*/g#</entry>
        <entry>action GotoDeclaration</entry>
        <entry>action FindUsages</entry>
        <entry>action GotoFile</entry>
        <entry>action CommentByLineComment</entry>
        <entry>action Find</entry>
        <entry>action GotoAction</entry>
        <entry>action ShowFilePath</entry>
        <entry>action CloseActiveTab</entry>
        <entry>action ActivateTerminalToolWindow</entry>
        <entry>action SearchEverywhere</entry>
        <entry>action ShowUsages</entry>
        <entry>CloseEditor</entry>
        <entry>action CloseEditor</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
    <shortcut-conflicts>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed G</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed I</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed B</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed W</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed C</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed OPEN_BRACKET</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed H</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed X</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed P</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed E</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed U</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
</application>